searchState.loadedDescShard("axconfig_gen", 0, "axconfig-gen\nArray type (e.g., <code>[int]</code>).\nBoolean type (<code>bool</code>).\nA structure storing all config items.\nThe error type on config parsing.\nA structure representing a config item.\nA specialized <code>Result</code> type with <code>ConfigErr</code> as the error type.\nThe supported types in the config file.\nA structure representing a config value.\nContains the error value\nThe name of the global table of the config.\nSigned integer type (<code>int</code>).\nInvalid config type.\nInvalid config value.\nContains the success value\nOther error.\nThe format of the generated file.\nTOML parsing error.\nOutput is Rust code.\nString type (<code>str</code>).\nOutput is in TOML format.\nTuple type (e.g., <code>(int, str)</code>).\nUnsigned integer type (<code>uint</code>).\nType is unknown.\nConfig value and type mismatch.\nReturns the comments of the config item.\nReturns the reference to the config item with the …\nReturns the mutable reference to the config item with the …\nDump the config into a string with the specified format.\nDump the config into Rust code.\nDump the config into TOML format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse a toml string into a config object.\nReturns the global table of the config.\nReturns the inferred type of the config value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the config object contains no items.\nReturns the unique name of the config item.\nReturns the iterator of all config items.\nReturns the key of the config item.\nMerge the other config into <code>self</code>, if there is a duplicate …\nCreate a new empty config object.\nParses a type string into a <code>ConfigType</code>.\nParses a TOML-formatted string into a <code>ConfigValue</code>.\nParses a TOML-formatted string into a <code>ConfigValue</code> with a …\nReturns the reference to the table with the specified name.\nReturns the mutable reference to the table with the …\nReturns the comments of the table with the specified name.\nReturns the iterator of all tables.\nReturns the table name of the config item.\nConverts the type into a Rust type string.\nReturns the Rust code of the config value.\nReturns the TOML-formatted string of the config value.\nReturns the type of the config value if it is specified on …\nReturns whether the type of the config value matches the …\nUpdate the values of <code>self</code> with the other config, if there …\nUpdates the config value with a new value.\nReturns the value of the config item.\nReturns the mutable reference to the value of the config …")